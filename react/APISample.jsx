/**
 * 선행학습
 *
 * REST API (Representational State Transfer)
 *
 * 디자인 가이드 HTTP Method with CRUD
 * - Create: POST
 * - Read: GET
 * - Update: PUT
 * - Delete: DELETE
 *
 * URI 설계
 * - 슬래시('/')는 계층을 나타냄. 마지막엔 포함하지 않는다.
 * - 가독성을 높일 땐 하이픈('-') 사용. 언더바('_')는 사용하지 않는다.
 * - 대소문자를 구분하지만 되도록 소문자를 사용하도록 한다.
 * - 파일 확장자는 포함하지 않는다.
 * - Collection(복수, 집합체)과 Document(단수, 하나의 객체)를 활용하면 직관적인 URI를 설계할 수 있다.
 *
 * HTTP 응답 상태 코드
 * - 200: 클라이언트 요청 수행
 * - 201: 클라이언트가 POST를 통한 생성 작업 시 해당 리소스가 정상적으로 생성 됨
 *
 * - 400: 클라이언트의 요청이 부적절할 경우
 * - 401: 클라이언트가 인증되지 않은 상태에서 보호된 리소스를 요청할 때
 * - 403: 리소스가 존재한다는 뜻, 또는 인증여부에 관계없이 응답 하고싶지 않은 요청을 받았을 때 (400, 404 사용을 권고)
 * - 405: 클라이언트가 요청한 리소스에서는 사용 불가한 Method
 *
 * - 301: 요청한 리소스에 대한 URI가 변경 됨.(응답 시 Location header에 변경 된 URI를 적어줘야 함)
 * - 500: 서버문제
 */
